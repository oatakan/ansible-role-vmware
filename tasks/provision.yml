---

- name: clone template and customize
  vmware_guest:
    hostname: "{{ lookup('env', 'VMWARE_HOST')|default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER')|default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD')|default(providers.vcenter.password) }}"
    validate_certs: no
    datacenter: "{{ providers.vcenter.datacenter }}"
    cluster: "{{ providers.vcenter.cluster }}"
    resource_pool: "{{ providers.vcenter.resource_pool|default('') }}"
    folder: "{{ providers.vcenter.folder|default('') }}"
    name: "{{ item.name }}"
    template: "{{ item.template|default(omit) }}"
    datastore: "{{ item.datastore|default(omit) }}"
    snapshot_src: "{{ item.snapshot_src|default(omit) }}"
    linked_clone: "{{ item.linked_clone|default(omit) }}"
    cdrom: "{{ node_iso_file[item.name]|default(omit) }}"
    guest_id: "{{ item.guest_id|default(omit) }}"
    customvalues: "{{ item.customvalues|default(omit) }}"
    state: poweredon
    wait_for_ip_address: yes
    disk: "{{ item.disk|default(omit) }}"
    hardware:
      memory_mb: "{{ item.memory }}"
      num_cpus: "{{ item.cpu }}"
      scsi: paravirtual
      nested_virt: "{{ item.nested_virt|default(omit) }}"
      boot_firmware: "{{ item.boot_firmware|default(omit) }}"
    networks: "{{ item.networks|default(omit) }}"
    customization: "{{ item.customization|default(omit) }}"
  async: 7200
  poll: 0
  register: deploy
  loop: "{{ nodes }}"
  when: nodes is defined

- name: wait for instance creation to complete
  async_status:
    jid: "{{ item.ansible_job_id }}"
  register: instances
  until: instances.finished
  retries: "{{ instance_wait_retry_limit }}"
  delay: 10
  loop: "{{ deploy.results }}"

- name: add custom attributes
  vmware_guest_custom_attributes:
    hostname: "{{ lookup('env', 'VMWARE_HOST')|default(providers.vcenter.hostname) }}"
    username: "{{ lookup('env', 'VMWARE_USER')|default(providers.vcenter.username) }}"
    password: "{{ lookup('env', 'VMWARE_PASSWORD')|default(providers.vcenter.password) }}"
    validate_certs: no
    name: "{{ item.item.item.name | default(item.instance.hw_name) }}"
    state: present
    attributes:
      - name: environment
        value: "{{ item.item.item.environment | default('dev') }}"
      - name: app_name
        value: "{{ item.item.item.app_name | default('') }}"
      - name: role
        value: "{{ item.item.item.role | default('') }}"
  loop: "{{ instances.results }}"
  when:
    - enable_custom_attributes|bool
    - instances is defined
    - item.instance is defined
  ignore_errors: yes

- include_tasks: add_tags.yml
  when:
    - enable_tags|bool
    - instances is defined

- debug:
    msg: "{{ item.item.item.networks[0].ip | default(item.instance.ipv4) }}"
  loop: "{{ instances.results }}"

- name: waiting for servers to come online
  wait_for:
    host: "{{ item.item.item.networks[0].ip | default(item.instance.ipv4) }}"
    port: "{{ item.item.item.ansible_port | default(ansible_port) | default('22') }}"
    timeout: "{{ instance_wait_connection_timeout }}"
  loop: "{{ instances.results }}"
  when:
    - instances is defined
    - item.instance is defined
  ignore_errors: yes